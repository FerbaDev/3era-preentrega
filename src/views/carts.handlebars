<div class="shopping-cart-container">
    <h1 class="cart-title">Carrito de Compras</h1>

    <div class="products-container">
        {{#each productos}}
        <div class="product-card">
            <div class="product-info">
                <h5 class="product-title">Producto: {{this.product.title}}</h5>
                <p class="product-quantity">Cantidad: {{this.quantity}}</p>
                <p class="product-price">Precio: ${{this.product.totalPrice}}</p>
                <button onclick="eliminarProducto('{{this.cartId}}', '{{this.product._id}}')" class="btn delete-btn">Eliminar</button>
            </div>
        </div>
        {{/each}}
    </div>

    <button onclick="vaciarCarrito('{{cartId}}')" class="btn">Vaciar Carrito</button>
    <button onclick="finalizarCompra('{{cartId}}')" class="btn">Finalizar Compra</button>
    <h3 class="total-price">Total de la compra: ${{totalCompra}}</h3>
</div>

<script>
    function eliminarProducto(cartId, productId) {
        fetch(`/api/carts/${cartId}/product/${productId}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al eliminar el producto del carrito');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function vaciarCarrito(cartId) {
        fetch(`/api/carts/${cartId}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al vaciar el carrito');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function finalizarCompra(cartId) {
        fetch(`/api/carts/${cartId}/purchase`, {
            method: 'POST'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al finalizar la compra');
                }
                return response.json();
            })
            .then(data => {
                if (data.productosNoDisponibles && data.productosNoDisponibles.length > 0) {
                    alert('Algunos productos no pudieron comprarse debido a falta de stock.');
                } else {
                    alert('Compra finalizada con Ã©xito.');
                    window.location.href = `/checkout/${data.ticketId}`;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error al finalizar la compra');
            });
    }
</script>
